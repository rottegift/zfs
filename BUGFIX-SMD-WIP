unlinked_drain in general:

should not defer all that many unlinks, very space-wasting and slows things
down when the price is paid at import/shutdown

also:

zfs_dir.c zfs_unlinked_drain_stop_wait 595 : ASSERT3 (zfsvfs->z_unmounted == B_FALSE) failed (1 == 0)

which seems to get followed every time by zfs_os_proxy_get lookup failed and zfs_osx_proxy_remove couldn't get dataset "".

is the ASSERT cosmetic or actual useful debugging?
are those proxy things (ZFSDatasetScheme) just cosmetic?

- --

Fix this annoying assert spam that arises during either recv or scrub (or both at once)

              zfs`vdev_queue_io_to_issue+0x53a
              zfs`vdev_queue_io+0x1b3
              zfs`zio_vdev_io_start+0x540
              zfs`zio_nowait+0x2b2
              zfs`vdev_raidz_io_start+0x658
              zfs`zio_vdev_io_start+0x755
              zfs`zio_nowait+0x2b2
              zfs`vdev_mirror_io_start+0x419
              zfs`zio_vdev_io_start+0x755
              zfs`__zio_execute+0x1b2
              spl`taskq_thread+0x237
              kernel`call_continuation+0x17

Jul  7 17:54:21 mis kernel[0]: vdev_queue.c vdev_queue_max_async_writes 343 : ASSERT3( writes <= zfs_vdev_async_write_max_active) failed (384575380 <= 20)

commit 7bc1ad90e77dede3e5c433d430c337bd29d8d85b
Author: Sean Doran <smd@mis.use.net>
Date:   Sat Sep 9 04:39:26 2017 +0100

    Correct the linear interpolation in vdev_queue_max_async_writes()

    Replace vdev_queue_max_async_writes(), returning a correct
    value based on the diagram in the large comment at the
    start of the vdev_queue.c.

diff --git a/module/zfs/vdev_queue.c b/module/zfs/vdev_queue.c
index 6bec4aa55e..6a4e45077f 100644
--- a/module/zfs/vdev_queue.c
+++ b/module/zfs/vdev_queue.c
@@ -265,6 +265,70 @@ vdev_queue_class_min_active(zio_priority_t p)
