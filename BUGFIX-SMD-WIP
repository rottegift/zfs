- --

git-imerge

Perform a merge or rebase between two git branches incrementally.
Conflicts between branches are tracked down to pairs of individual commits, to simplify conflict resolution.

–Start imerge-based rebase (checkout the branch to be rebased, first):
git imerge rebasebranch_to_rebase_onto

–Start imerge-based merge (checkout the branch to merge into, first):
git imerge mergebranch_to_be_merged

–Show ASCII diagram of in-progress merge or rebase:
git imerge diagram

–Continue imerge operation after resolving conflicts (git addthe conflicted files, first):
git imerge continue --no-edit

–Wrap up the imerge operation, after all conflicts are resolved:
git imerge finish

[ info from https://tldr.sh ]

- --

taskq fiixng / thread priorities, because scrubbing ssdpool is a pain

- --

holes!

/opt/local/bin/rsync --inplace --no-whole-file -i -x -avh --sparse src/ dst/

especially with vmware vmem files (and vmdk files) where src is not a dataset.

dst/ as dataset: problems with --sparse,

dst/ as non-zfs (including zvol): no problems with --sparse, BUT it may lead to a zfs send | zfs recv checksum mismatch on the partition itself (but not likely the files inside).


- --

this KP, turned on kmem debugging to see if it's UAF or free-after-free

*** Panic Report ***
panic(cpu 2 caller 0xffffff7f82296522): "vmem_hash_delete(0xffffff7f82494000, ffffff822ca77000, 32768): bad free (name: abd_chunk, addr, size)"@spl-vmem.c:785
Backtrace (CPU 2), Frame : Return Address
0xffffff8246247de0 : 0xffffff8001adab52 mach_kernel : _panic + 0xe2
0xffffff8246247e60 : 0xffffff7f82296522 net.lundman.spl : _vmem_xfree + 0xd2
0xffffff8246247ea0 : 0xffffff7f83489664 net.lundman.zfs : _abd_try_move + 0x4c4
0xffffff8246247f00 : 0xffffff7f834a6403 net.lundman.zfs : _arc_abd_move_thread + 0x6a3
0xffffff8246247fb0 : 0xffffff8001bca3f7 mach_kernel : _call_continuation + 0x17


- --

make abdmove runtime-disable/runtime-renable -able

- --

kmem kernel panics: null derefs?

1. abd: there are some abd_iter changes and general abd.c variations
from my taskq fixing branch, examine those, in particular any changes
to mutexing critical sections

0xffffff8223987a90 : 0xffffff80218dab52 mach_kernel : _panic + 0xe2
0xffffff8223987b10 : 0xffffff80219cfdab mach_kernel : _kernel_trap + 0xa5b
0xffffff8223987cf0 : 0xffffff80219ebc03 mach_kernel : _return_from_trap + 0xe3
0xffffff8223987d10 : 0xffffff7fa208854a net.lundman.spl : _kmem_findslab + 0x4a
0xffffff8223987e30 : 0xffffff7fa20828a3 net.lundman.spl : _kmem_error + 0x2e3
0xffffff8223987ea0 : 0xffffff7fa3289664 net.lundman.zfs : _abd_try_move + 0x4c4
0xffffff8223987f00 : 0xffffff7fa32a6403 net.lundman.zfs : _arc_abd_move_thread + 0x6a3
0xffffff8223987fb0 : 0xffffff80219ca3f7 mach_kernel : _call_continuation + 0x17

2. kmem

Backtrace (CPU 2), Frame : Return Address
0xffffff826b287a90 : 0xffffff8026cdab52 mach_kernel : _panic + 0xe2
0xffffff826b287b10 : 0xffffff8026dcfdab mach_kernel : _kernel_trap + 0xa5b
0xffffff826b287cf0 : 0xffffff8026debc03 mach_kernel : _return_from_trap + 0xe3
0xffffff826b287d10 : 0xffffff7fa748854a net.lundman.spl : _kmem_findslab + 0x4a
0xffffff826b287e30 : 0xffffff7fa74828a3 net.lundman.spl : _kmem_error + 0x2e3
0xffffff826b287ea0 : 0xffffff7fa748af8b net.lundman.spl : _kmem_magazine_destroy + 0x15b
0xffffff826b287ee0 : 0xffffff7fa7482e55 net.lundman.spl : _kmem_depot_ws_reap + 0xa5
0xffffff826b287f10 : 0xffffff7fa7492fb7 net.lundman.spl : _taskq_thread + 0x237
0xffffff826b287fb0 : 0xffffff8026dca3f7 mach_kernel : _call_continuation + 0x17



- --

FIXED: linear interpolation in vdev_queue_max_async_writes
